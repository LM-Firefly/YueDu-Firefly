name: Test Build

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!**/assets/**'
      - '!**.md'
      - '!**/ISSUE_TEMPLATE/**'
      - '!**/modules/web/**'
  pull_request:
    paths-ignore:
      - '**/modules/web/**'
  workflow_dispatch:
#  watch:
#    types: [started]
#  schedule:
#    - cron: '0 4 * * *'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  prepare:
    runs-on: ubuntu-latest
    env:
      GIT_TOKEN: ${{secrets.ACTIONS_TOKEN}}
    outputs:
      changed: ${{steps.build_changelog.outputs.changelog}}
      version: ${{ steps.set-ver.outputs.version }}
    #      lanzou: ${{ steps.check.outputs.lanzou }}
    #      telegram: ${{ steps.check.outputs.telegram }}
    steps:
      - name: Setup timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Asia/Shanghai"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{env.GIT_TOKEN}}
      - id: set-ver
        run: |
          echo "version=$(date +3.%y.%m%d%H%M)" >> $GITHUB_OUTPUT
  #      - id: check
  #        run: |
  #          if [ ${{ secrets.LANZOU_ID }} ]; then
  #            echo "lanzou=yes" >> $GITHUB_OUTPUT
  #          fi
  #          if [ ${{ secrets.BOT_TOKEN }} ]; then
  #            echo "telegram=yes" >> $GITHUB_OUTPUT
  #          fi

  build:
    needs: prepare
    strategy:
      matrix:
        product: [Google]
        type: [Original, Firefly]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      CHANGE: ${{ needs.prepare.outputs.changed }}
      GIT_TOKEN: ${{secrets.ACTIONS_TOKEN}}
      product: ${{ matrix.product }}
      type: ${{ matrix.type }}
      VERSION: ${{ needs.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">$GITHUB_WORKSPACE/app/src/main/assets/18PlusList.txt
      - name: Release Apk Sign
        run: |
          echo "给apk增加签名"
          cp $GITHUB_WORKSPACE/.github/workflows/firefly.jks $GITHUB_WORKSPACE/app/firefly.jks
          sed '$a\RELEASE_STORE_FILE=./firefly.jks'          $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=YueDu-Firefly'                 $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=YueDu-Firefly'     $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=YueDu-Firefly'       $GITHUB_WORKSPACE/gradle.properties -i
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: current
      - name: Build With Gradle
        run: |
          if [ ${{ env.type }} == 'Original' ]; then
            typeName="Original"
          else
            typeName="Firefly"
            sed "s/'.release'/'.Firefly'/" $GITHUB_WORKSPACE/app/build.gradle  -i
            sed 's/.release/.Firefly/'     $GITHUB_WORKSPACE/app/google-services.json -i
          fi
          echo "统一版本号"
          sed "/def version/c def version = \"${{ env.VERSION }}\"" $GITHUB_WORKSPACE/app/build.gradle  -i
          echo "开始进行${{ env.product }}.$typeName构建"
          chmod +x gradlew
          ./gradlew assemble${{ env.product }}release --build-cache --parallel --daemon --warning-mode all
          echo "修改文件名"
          mkdir -p ${{ github.workspace }}/apk/
          for file in `ls ${{ github.workspace }}/app/build/outputs/apk/*/*/*.apk`; do
            mv "$file" ${{ github.workspace }}/apk/YueDu.${{ env.product }}.$typeName.${{ env.VERSION }}.apk
          done
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: YueDu.${{ env.product }}.${{ env.type }}
          path: ${{ github.workspace }}/apk/*.apk
      - name: Prerelease
        #        if: ${{ env.product == 'Google' }}
        uses: softprops/action-gh-release@v0.1.15
        with:
          name: YueDu.${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          #          body: ${{ env.CHANGE }}
          body_path: ${{ github.workspace }}/app/src/main/assets/updateLog.md
          generate_release_notes: true
          #          append_body: true
          token: ${{env.GIT_TOKEN}}
          draft: false
          prerelease: true
          files: ${{ github.workspace }}/apk/YueDu.*.apk

  #  lanzou:
  #    needs: [ prepare, build ]
  #    if: ${{ github.event_name != 'pull_request' && needs.prepare.outputs.lanzou == 'yes' }}
  #    runs-on: ubuntu-latest
  #    env:
  #      # 登录蓝奏云后在控制台运行document.cookie
  #      ylogin: ${{ secrets.LANZOU_ID }}
  #      phpdisk_info: ${{ secrets.LANZOU_PSD }}
  #      # 蓝奏云里的文件夹ID（阅读3测试版:2670621）
  #      LANZOU_FOLDER_ID: '2670621'
  #    steps:
  #      - name: Setup timezone
  #        uses: szenius/set-timezone@v1.2
  #        with:
  #          timezoneLinux: "Asia/Shanghai"
  #      - uses: actions/checkout@v4
  #      - uses: actions/download-artifact@v4
  #        with:
  #          path: apk/
  #      - working-directory: apk/
  #        run: mv */*.apk . ;rm -rf */
  #      - name: Upload To Lanzou
  #        continue-on-error: true
  #        run: |
  #          path="$GITHUB_WORKSPACE/apk/"
  #          python3 $GITHUB_WORKSPACE/.github/scripts/lzy_web.py "$path" "$LANZOU_FOLDER_ID"
  #          echo "[$(date '+%Y.%m.%d %H:%M:%S')] 分享链接: https://kunfei.lanzoux.com/b0f810h4b"

  #  test_Branch:
  #    needs: [ prepare, build ]
  #    runs-on: ubuntu-latest
  #    if: ${{ github.event_name != 'pull_request' && github.actor == 'LM-Firefly' }}
  #    env:
  #      VERSION: ${{ needs.prepare.outputs.ver }}
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: actions/download-artifact@v4
  #        with:
  #          path: apk/
  #      - working-directory: apk/
  #        run: mv */*.apk . ;rm -rf */
  #      - name: Push Assets To "test" Branch
  #        run: |
  #          cd $GITHUB_WORKSPACE/apk/
  #          git config --global user.name "github-actions[bot]"
  #          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
  #          git init
  #          git checkout -b test
  #          git remote add origin "https://${{ github.actor }}:${{env.GIT_TOKEN}}@github.com/${{ github.actor }}/release"
  #          git add *.apk
  #          git commit -m "${{ env.VERSION }}"
  #          git push -f -u origin test

  #  telegram:
  #    needs: [ prepare, build ]
  #    if: ${{ github.event_name != 'pull_request' && needs.prepare.outputs.telegram == 'yes' }}
  #    runs-on: ubuntu-latest
  #    env:
  #      CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
  #      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: actions/download-artifact@v4
  #        with:
  #          path: apk/
  #      - working-directory: apk/
  #        run: |
  #          for file in `ls */*.apk`; do
  #            mv "$file" "$(echo "$file"|sed -e 's#.*\/##g' -e "s/_/ /g" -e 's/legado/阅读/')"
  #          done
  #          rm -rf */
  #      - name: Post to channel
  #        run: |
  #          pip install pyTelegramBotAPI
  #          path="$GITHUB_WORKSPACE/apk/"
  #          python3 $GITHUB_WORKSPACE/.github/scripts/tg_bot.py "$BOT_TOKEN" "$CHANNEL_ID" "$path"
