// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext{
        compile_sdk_version = 36
        build_tool_version = '36.0.0'
//        kotlin_version = '1.9.22'
//        ksp_version = "1.0.17"
//        agp_version = '8.2.2'
//        media3_version = "1.2.1"
//        splitties_version = '3.0.0'
//        room_version = '2.6.1'
    }
}

plugins {
    //id 'com.android.application' version "$agp_version" apply false
    //id 'com.android.library' version "$agp_version" apply false
    //id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    //id 'com.google.devtools.ksp' version "$kotlin_version-$ksp_version" apply false
    //id "de.undercouch.download" version "5.5.0" apply false
    //id "com.google.gms.google-services" version "4.4.0" apply false

    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.parcelize apply false
    alias libs.plugins.ksp apply false
    // alias libs.plugins.google.services apply false
    // google-services plugin removed upstream to avoid requiring Google Play services
    alias libs.plugins.room apply false

    alias libs.plugins.download apply false
    alias libs.plugins.versions
}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}

// 配置依赖更新任务策略：拒绝将稳定版本升级到不稳定(包含 -alpha/-beta/-rc 等)版本
// 运行方式： ./gradlew dependencyUpdates  或  ./gradlew dependencyUpdates -Drevision=release
// 输出报告： build/dependencyUpdates/report.txt  (HTML/JSON 同目录)
tasks.withType(com.github.benmanes.gradle.versions.updates.DependencyUpdatesTask).configureEach { task ->
    // 只关注 release（不含 -SNAPSHOT 等）
    gradleReleaseChannel = 'current'
    checkForGradleUpdate = true

    def isNonStable = { String version ->
        if (!version) return false
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { version.toUpperCase().contains(it) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }

    rejectVersionIf { selection ->
        def currentNonStable = isNonStable(selection.currentVersion)
        def candidateNonStable = isNonStable(selection.candidate.version)
        return !currentNonStable && candidateNonStable
    }

    outputFormatter = 'plain,html,json'
    outputDir = "$buildDir/dependencyUpdates"
    reportfileName = 'report'
}